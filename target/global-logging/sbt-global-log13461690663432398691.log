[debug] > Exec(compile, None, None)
[debug] Evaluating tasks: Compile / compile
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 22 Scala sources to C:\Users\User\Downloads\evolution-games\untitled2\target\scala-2.13\classes ...
[error] C:\Users\User\Downloads\evolution-games\untitled2\src\main\scala\repository\doobie\DoobieUserRepository.scala:15:44: type mismatch;
[error]  found   : Char
[error]  required: doobie.syntax.SqlInterpolator.SingleFragment[_]; incompatible interpolation method sql
[error]   def insert(user: RegularUser): Update0 = sql"""
[error]                                            ^
[error] C:\Users\User\Downloads\evolution-games\untitled2\src\main\scala\repository\doobie\DoobieUserRepository.scala:20:54: type mismatch;
[error]  found   : domain.entity.RegularUser
[error]  required: doobie.syntax.SqlInterpolator.SingleFragment[_]; incompatible interpolation method sql
[error]   def update(user: RegularUser, id: Long): Update0 = sql"""
[error]                                                      ^
[error] C:\Users\User\Downloads\evolution-games\untitled2\src\main\scala\repository\doobie\DoobieUserRepository.scala:32:12: 
[error] Cannot find or construct a Read instance for type:
[error] 
[error]   domain.entity.RegularUser
[error] 
[error] This can happen for a few reasons, but the most common case is that a data
[error] member somewhere within this type doesn't have a Get instance in scope. Here are
[error] some debugging hints:
[error] 
[error] - For Option types, ensure that a Read instance is in scope for the non-Option
[error]   version.
[error] - For types you expect to map to a single column ensure that a Get instance is
[error]   in scope.
[error] - For case classes, HLists, and shapeless records ensure that each element
[error]   has a Read instance in scope.
[error] - Lather, rinse, repeat, recursively until you find the problematic bit.
[error] 
[error] You can check that an instance exists for Read in the REPL or in your code:
[error] 
[error]   scala> Read[Foo]
[error] 
[error] and similarly with Get:
[error] 
[error]   scala> Get[Foo]
[error] 
[error] And find the missing instance and construct it as needed. Refer to Chapter 12
[error] of the book of doobie for more information.
[error]   """.query[RegularUser]
[error]            ^
[error] C:\Users\User\Downloads\evolution-games\untitled2\src\main\scala\repository\doobie\DoobieUserRepository.scala:47:6: value transact is not a member of cats.free.Free[doobie.free.connection.ConnectionOp,domain.entity.RegularUser]
[error] possible cause: maybe a semicolon is missing before `value transact`?
[error]     .transact(xa)
[error]      ^
[error] C:\Users\User\Downloads\evolution-games\untitled2\src\main\scala\repository\doobie\DoobieUserRepository.scala:53:6: value transact is not a member of doobie.ConnectionIO[Option[domain.entity.RegularUser]]
[error] possible cause: maybe a semicolon is missing before `value transact`?
[error]     .transact(xa)
[error]      ^
[error] C:\Users\User\Downloads\evolution-games\untitled2\src\main\scala\repository\doobie\DoobieUserRepository.scala:55:82: value transact is not a member of doobie.ConnectionIO[Option[domain.entity.RegularUser]]
[error]   override def get(id: Long): F[Option[RegularUser]] = UserSQL.select(id).option.transact(xa)
[error]                                                                                  ^
[error] C:\Users\User\Downloads\evolution-games\untitled2\src\main\scala\repository\doobie\DoobieUserRepository.scala:58:50: value transact is not a member of doobie.ConnectionIO[Int]
[error]     .semiflatMap(order => UserSQL.delete(id).run.transact(xa).as(order))
[error]                                                  ^
[error] 7 errors found
[error] (Compile / compileIncremental) Compilation failed
[error] Total time: 13 s, completed Apr 10, 2023, 10:23:17 AM
[debug] > Exec(idea-shell, None, None)
